{%- assign filter_tree_vertical_style = shop.metafields.bc-sf-filter.settings | split: 'general":' | last | split: 'filterTreeVerticalStyle":"' | last | split: '","' | first | strip -%}
{%- assign enable_filter_sticky_d = shop.metafields.bc-sf-filter.settings | split: 'general":' | last | split: 'stickyFilterOnDesktop":' | last | split: ',' | first | strip -%}
{%- assign enable_filter_sticky_m = shop.metafields.bc-sf-filter.settings | split: 'general":' | last | split: 'stickyFilterOnMobile":' | last | split: ',' | first |  split: '}}' | first | strip -%}

{%- assign enable_filter_tree_button_desktop_v = false -%}
{%- if filter_tree_vertical_style == 'style-off-canvas' or filter_tree_vertical_style == 'style-expand' -%}
  {%- assign enable_filter_tree_button_desktop_v = true -%}
{%- endif -%}

{%- assign per_row = 5 -%}
{% assign paginate_by = per_row | times: 5 %}

<div id="CollectionSection" data-section-id="{{ section.id }}" data-section-type="collection-template">
  <div>
    <div id="CollectionAjaxContent">
      <div class="page-width page-content">

        {% render 'breadcrumbs' %}

        <header class="section-header">
          <h1 class="boost-pfs-search-result-header section-header__title">
            {{ 'general.search.title' | t }}
          </h1>
        </header>

        {% render 'search-bar', search_btn_style: 'btn', search_bar_location: 'search-bar--page' %}

        <p class="boost-pfs-search-result-number boost-pfs-search-panel-product-show"></p>

        <div class="boost-pfs-search-result-toolbar {% if enable_filter_sticky_d  %} boost-pfs-filter-tree-desktop-button-sticky-wrapper {% endif %}">
          {%- if enable_filter_tree_button_desktop_v -%}
            <div class="boost-pfs-search-result-item boost-pfs-search-panel-product-show">
              <div class="boost-pfs-filter-tree-desktop-button">{%- render 'boost-pfs-filter-skeleton', type: 'button' -%}</div>
            </div>
          {%- endif -%}
          <div class="boost-pfs-search-result-item">
            <ul class="boost-pfs-search-result-panel-controls">
              <li>{% render 'boost-pfs-filter-skeleton', width: 2 %}</li>
              <li>{% render 'boost-pfs-filter-skeleton', width: 2 %}</li>
              <li>{% render 'boost-pfs-filter-skeleton', width: 1 %}</li>
            </ul>
          </div>
          <div class="boost-pfs-search-result-item">
            <span class="boost-pfs-search-total-result">
              {% render 'boost-pfs-filter-skeleton', width: 2 %}
            </span>
          </div>
        </div>

        <div class="collection-filter">
          <div class="grid grid--uniform boost-pfs-search-panel-product-show">
            <div class="boost-pfs-filter-top-sorting grid__item small--one-whole medium-up--one-whole text-right">{% render 'boost-pfs-filter-skeleton', width: 3 %}</div>
          </div>
        </div>

        <div class="boost-pfs-filter-wrapper grid grid--uniform">
          {% assign grid_item_width = 'small--one-half medium-up--one-third' %}

          <div class="boost-pfs-filter-tree-mobile-button" >{% render 'boost-pfs-filter-skeleton', type: 'button' %}</div>
          <div class="boost-pfs-filter-left-col">
            <div class="boost-pfs-filter-tree boost-pfs-filter-tree-v" >
              {% comment %} render placeholder template {% endcomment %}
              {%- unless enable_filter_tree_button_desktop_v -%}
                {% render 'boost-pfs-filter-skeleton', type: 'filter-tree' %}
              {%- endunless -%}
            </div>
          </div>
          <div class="boost-pfs-filter-right-col">
            <div class="boost-pfs-filter-products">
              {% comment %} Fix Shopify search term report {% endcomment %}
              {% paginate search.results by 2 %}
                {% if search.performed %}
                  {% for item in search.results %}
                    <div class="grid__item" style="display: none !important"></div>
                  {% endfor %}
                {% endif %}
              {% endpaginate %}
            </div>
          </div>
        </div>

        <div class="boost-pfs-filter-bottom-pagination pagination"></div>
        <div class="boost-pfs-filter-load-more"></div>
        <div class="boost-pfs-quick-shop-modal-container"></div>

        <div class="boost-pfs-search-result-wrap boost-hidden">
          <div class="boost-pfs-search-result-collections">
            <div class="boost-pfs-search-result-list-item"><a href="#">{% render 'boost-pfs-filter-skeleton', width: 4 %}</a></div>
            <div class="boost-pfs-search-result-list-item"><a href="#">{% render 'boost-pfs-filter-skeleton', width: 3 %}</a></div>
            <div class="boost-pfs-search-result-list-item"><a href="#">{% render 'boost-pfs-filter-skeleton', width: 4 %}</a></div>
          </div>
          <div class="boost-pfs-search-result-collection-pagination pagination">{% render 'boost-pfs-filter-skeleton', width: 4 %}</div>
        </div>
        <div class="boost-pfs-search-result-wrap boost-hidden">
          <div class="boost-pfs-search-result-pages">
            <div class="boost-pfs-search-result-list-item"><a href="#">{% render 'boost-pfs-filter-skeleton', width: 4 %}</a></div>
            <div class="boost-pfs-search-result-list-item"><a href="#">{% render 'boost-pfs-filter-skeleton', width: 3 %}</a></div>
            <div class="boost-pfs-search-result-list-item"><a href="#">{% render 'boost-pfs-filter-skeleton', width: 4 %}</a></div>
          </div>
          <div class="boost-pfs-search-result-page-pagination pagination">{% render 'boost-pfs-filter-skeleton', width: 4 %}</div>
        </div>

      </div>
    </div>
  </div>
</div>


<script>
  // Declare boostPFSThemeConfig variable
  var boostPFSThemeConfig = {
    label: {
      sold_out: {{ 'products.product.sold_out' | t | json }},
      save_html: {{ 'products.general.save_html' | t | json }},
      regular_price: {{ 'products.general.regular_price' | t | json }},
      sale_price: {{ 'products.general.sale_price' | t | json }},
      from_text_html: {{ 'products.general.from_text_html' | t | json }},
      quick_shop: {{ settings.quick_shop_text | json }},

      items_with_count_one: {{ 'collections.general.items_with_count.one' | t | json}},
      items_with_count_other: {{ 'collections.general.items_with_count.other' | t | json }},
    },
    custom: {
      products_per_page: 12,
      products_per_row: 3,
      grid_item_width: 'medium-up--one-quarter medium--one-half',
      vendor_enable: {% if settings.vendor_enable %} {{ settings.vendor_enable | json }} {% else %} false {% endif %},
      quick_shop_enable: {% if settings.quick_shop_enable %} {{ settings.quick_shop_enable | json }} {% else %} false {% endif %},
      product_hover_image: {% if settings.product_hover_image %} {{ settings.product_hover_image | json }} {% else %} false {% endif %},
      product_grid_image_size: {% if settings.product_grid_image_size %} {{ settings.product_grid_image_size | json }} {% else %} 'natural' {% endif %},
      enable_swatches: {% if settings.enable_swatches %} {{ settings.enable_swatches | json }} {% else %} false {% endif %},
      enable_product_reviews:  {% if settings.enable_product_reviews %} {{ settings.enable_product_reviews | json }} {% else %} false {% endif %},
      product_grid_image_fill: {% if settings.product_grid_image_fill %} {{ settings.product_grid_image_fill | json}} {% else %} false {% endif %},
      product_save_amount: {% if settings.product_save_amount %} {{ settings.product_save_amount | json}} {% else %} false {% endif %},
      product_save_type: {% if settings.product_save_type %} {{ settings.product_save_type | json}} {% else %} false {% endif %},
    }
  };

  var boostPFSTemplate = {
    // Product grid item template
    'productGridItemHtml': {% render 'boost-pfs-filter-html', layout: 'productGridItemHtml' %},

    // Pagination template
    'previousActiveHtml': {% render 'boost-pfs-filter-html', layout: 'previousActiveHtml' %},
    'previousDisabledHtml': {% render 'boost-pfs-filter-html', layout: 'previousDisabledHtml' %},
    'nextActiveHtml': {% render 'boost-pfs-filter-html', layout: 'nextActiveHtml' %},
    'nextDisabledHtml': {% render 'boost-pfs-filter-html', layout: 'nextDisabledHtml' %},
    'pageItemHtml': {% render 'boost-pfs-filter-html', layout: 'pageItemHtml' %},
    'pageItemSelectedHtml': {% render 'boost-pfs-filter-html', layout: 'pageItemSelectedHtml' %},
    'pageItemRemainHtml': {% render 'boost-pfs-filter-html', layout: 'pageItemRemainHtml' %},
    'paginateHtml': {% render 'boost-pfs-filter-html', layout: 'paginateHtml' %},

    // Sorting template
    'sortingHtml': {% render 'boost-pfs-filter-html', layout: 'sortingHtml' %},
  };
</script>
{% schema %}

{
  "name": "t:sections.main-search.name",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.main-search.settings.header_filtering_and_sorting"
    },
    {
      "type": "checkbox",
      "id": "enable_sidebar",
      "label": "t:sections.main-search.settings.enable_sidebar.label",
      "default": true,
      "info": "t:sections.main-search.settings.enable_sidebar.info"
    },
    {
      "type": "checkbox",
      "id": "collapsed",
      "label": "t:sections.main-search.settings.collapsed.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_color_swatches",
      "label": "t:sections.main-search.settings.enable_color_swatches.label",
      "info": "t:sections.main-search.settings.enable_color_swatches.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sort",
      "label": "t:sections.main-search.settings.enable_sort.label",
      "default": false
    },
    {
      "type": "range",
      "id": "per_row",
      "label": "t:sections.main-search.settings.per_row.label",
      "default": 4,
      "min": 1,
      "max": 5,
      "step": 1
    },
    {
      "type": "checkbox",
      "id": "mobile_flush_grid",
      "label": "t:sections.main-search.settings.mobile_flush_grid.label",
      "default": false
    }
  ]
}
{% endschema %}
